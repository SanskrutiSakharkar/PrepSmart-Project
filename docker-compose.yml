version: '3.9'

services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.adminCommand(\"ping\")' || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  ai_engine:
    build:
      context: ./ai_engine
      dockerfile: Dockerfile
    container_name: ai_engine
    env_file: ./ai_engine/.env
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/prepsmart
    depends_on:
      mongo:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  backend:
    build: ./server
    container_name: backend
    env_file: ./server/.env
    ports:
      - "5000:5000"
    environment:
      - AI_ENGINE_URL=http://ai_engine:8000
      - MONGODB_URI=mongodb://mongo:27017/prepsmart
    depends_on:
      mongo:
        condition: service_healthy
      ai_engine:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  frontend:
    build: ./client
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: always
    environment:
      - REACT_APP_API_URL=/api

volumes:
  mongo_data:
